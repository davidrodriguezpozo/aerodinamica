function main

clear all 
clc
close all 

datos = INPUT;
C = meshes (datos, datos.malla);

% FEM SOLUCIO ANALITICA
malla = 'x';
[S.cu_anal S.du_anal] = Analytic (datos, C, malla);

malla = 'y';
[S.cv_anal S.dv_anal] = Analytic (datos, C, malla);

clear malla

% FEM SOLUCIO NUMERICAL





disp('Analitica calculada');

function [conv diff] = Numerical (datos, C, malla)

for i = 2:datos.Nx-1
    for j=2:datos.Ny-1
        
        conv(i,j) = convection(u,v,datos.L,datos.H);
        diff(i,j) = diffusion_u(u,L);
    end
end

for i = 2:datos.Nx-1
    for j=2:datos.Ny-1
        conv(i,j) = convection(u,v,datos.L,datos.H);
        diff(i,j) = diffusion_u(u,L);
    end
end

function cu = convection (u,v,L,H)
    
    % CDS : Central Difference Scheme
        ue = (u(i+1,j)+u(i,j))/2;
        uw = (u(i+1,j)+u(i,j))/2;
        vn = (v(i,j+1)+u(i,j))/2;
        vs = (v(i,j-1)+u(i,j))/2;
        un = (u(i,j+1)+u(i,j))/2;
        us = (u(i,j-1)+u(i,j))/2;
   
   % Probar Upwind mï¿½s endavant
        
        Nx = length(u,1);
        Ny = length(u,2);
        
        dx = L/N; dy = H/Ny;
   
   % Mass Fluxes 
   
        Fe = ue * dy;
        Fw = uw * dy;
        Fn = vn * dx;
        Fs = vs * dx;
    
   % Convection term
   
   cu = Fe*ue - Fw*uw + Fn*un - Fs*us;

        
function [conv diff] = Analytic (datos, C, malla)

    for i = 2:datos.Nx-1
        for j=2:datos.Ny-1
        
        if strcmp(malla,'x') == 1
            x = C.stagX_x(i,j);
            y = C.stagX_y(i,j);
        elseif strcmp(malla,'y') == 1
            x = C.stagY_x(i,j);
            y = C.stagY_y(i,j);
        end
        
        u = datos.F*cos(2*pi*x)*sin(2*pi*y);
        v = -datos.F*cos(2*pi*y)*sin(2*pi*x);
        
        du_dx = - datos.F*2*pi*sin(2*pi*x)*sin(2*pi*y);
        du_dy = datos.F*2*pi*sin(2*pi*x)*cos(2*pi*y);
        dv_dx = -datos.F*2*pi*sin(2*pi*y)*sin(2*pi*x);
        dv_dy = datos.F*2*pi*sin(2*pi*y)*sin(2*pi*x);
        
        d2u_dx2 = - datos.F^2*4*pi^2*sin(2*pi*y)*cos(2*pi*x);
        d2v_dy2 = datos.F^2*4*pi^2*sin(2*pi*x)*cos(2*pi*y);
        
        if strcmp(malla,'x') == 1
            
            conv(i,j) = u*du_dx + u*dv_dx; %u * du/dx 
            diff(i,j) = d2u_dx2; 
            
        elseif strcmp(malla,'y') == 1
            
            conv(i,j) = v*du_dy + v*dv_dy; %v * du/dx 
            diff(i,j) = d2v_dy2; 
        
        end 
    end
end

function datos = INPUT 
    datos.Vx = 3;
    datos.Vy = 3;
    datos.Nx = datos.Vx+2;
    datos.Ny = datos.Vy+2;
    
    datos.L = 1;
    datos.H = 1;
    
    datos.uniform = true;
    datos.gamma = 1;
    
    datos.malla = 3;
    
    datos.F = 1;
    
    
function error = ERROR(numeric,anaylitic)
       
   A = abs(analytic-numeric);     
   error = max(A);